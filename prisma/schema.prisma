datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?  
  createdAt     DateTime  @default(now())
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  tweets        Tweet[] 

  likedTweets   String[]
  followers     String[]
  following     String[]
}

model Tweet {
  id           String     @id @default(cuid())

  userPfp      String?    
  userName     String

  userId       String
  user         User       @relation(fields: [userId], references: [id])
  
  body         String     
  images       String[]
  replyCount   Int        @default(0)
  likeCount    Int        @default(0)
  createdAt    DateTime   @default(now())
  parentId     String[]
  replyId      Int        @default(0)
  isDeleted    Boolean    @default(false) 
}